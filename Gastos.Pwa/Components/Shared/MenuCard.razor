@implements IDisposable

@inject LocalizationService Loc
@inject StateContainer StateContainer


<MudButton Href="@Href" class="menu-card-button pa-1" Style="width: 100%">
    <MudPaper Class="pa-2" Elevation="3" Style="width: 100%">
        <div style="text-align:center">
            <MudIcon Icon="@Icon" Size="Size.Large" Color="@Color" Style="@_styleTitle" />
            <MudText Typo="Typo.h6" Style="@_styleTitle">@Title</MudText>
            <hr />
            <MudText Style="@_styleDescription">@Description</MudText>
        </div>
    </MudPaper>
</MudButton>

@code {
    [Parameter] public string? Href { get; set; }
    [Parameter] public string? Icon { get; set; }
    [Parameter] public Color Color { get; set; } = Color.Primary;
    [Parameter] public string? Title { get; set; }
    [Parameter] public string? Description { get; set; }

    private string _styleTitle = "", _styleDescription = "";

    protected override void OnInitialized()
    {
        SetStyles();
        StateContainer.BreakpointChanged += OnBreakpointChanged;
    }

    private void SetStyles()
    {
        _styleTitle = StateContainer.IsMobile ? "" : "height: 6vh;";
        _styleDescription = StateContainer.IsMobile ? "" : "height: 10vh;";
    }

    private void OnBreakpointChanged()
    {
        SetStyles();
        StateHasChanged();
    }

    public void Dispose() => StateContainer.BreakpointChanged -= OnBreakpointChanged;
}